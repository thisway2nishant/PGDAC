Solve the following
1. write a procedure to insert record into employee table.
the procedure should accept empno, ename, sal, job, hiredate as input parameter
write insert statement inside procedure insert_rec to add one record into table.

mysql> delimiter $$
mysql> create procedure insert_rec(in pempno int, pename varchar(20), psal decimal(9, 2), pjob varchar(20), phdt date)
    -> begin
    -> insert into emp2(empno, ename, sal, job, hiredate) values
    -> (pempno, pename, psal, pjob, phdt);
    -> end $$
Query OK, 0 rows affected (0.18 sec)

mysql> delimiter ;
mysql> call insert_rec(110, "Akshay", 1500, "Clerk", '1998-12-02');
Query OK, 1 row affected (0.19 sec)

2. write a procedure to delete record from employee table.
the procedure should accept empno as input parameter.
write delete statement inside procedure delete_emp to delete one record from emp 
table.

mysql> delimiter $$
mysql> create procedure delete_emp(in pempno int)
    -> brgin
    -> ^C
mysql> ^C
mysql> delimiter $$
mysql> create procedure delete_emp(in pempno int)
    -> begin
    -> delete from emp2
    -> where empno = pempno;
    -> end $$
Query OK, 0 rows affected (0.12 sec)

mysql> delimiter ;
mysql> call delete_emp(110);
Query OK, 2 rows affected (0.16 sec)

3. write a procedure to display empno,ename,deptno,dname for all employees with sal 
> given salary. pass salary as a parameter to procedure

mysql> delimiter $$
mysql> create procedure dispSal(in psal int)
    -> begin
    -> select e.empno, e.ename, e.deptno, d.dname
    -> from emp2 e inner join dept d on e.deptno = d.deptno
    -> where e.sal > psal;
    -> end $$
Query OK, 0 rows affected (0.14 sec)

mysql> delimiter ;
mysql> call dispSal(2000);

+-------+---------+--------+------------+
| empno | ename   | deptno | dname      |
+-------+---------+--------+------------+
|  7566 | JONES   |     20 | RESEARCH   |
|  7698 | BLAKE   |     30 | SALES      |
|  7782 | CLARK   |     10 | ACCOUNTING |
|  7788 | SCOTT   |     20 | RESEARCH   |
|  7839 | KING    |     10 | ACCOUNTING |
|  7902 | FORD    |     20 | RESEARCH   |
|  7569 | Nishant |     30 | SALES      |
|  7570 | Akshay  |     30 | SALES      |
|  7571 | Lavee   |     30 | SALES      |
+-------+---------+--------+------------+
9 rows in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

4. write a procedure to find min,max,avg of salary and number of employees in the 
given deptno.
deptno --→ in parameter 
min,max,avg and count ---→ out type parameter
execute procedure and then display values min,max,avg and count

delimiter $$
create procedure dispSalary(in pdeptno int, out vmax decimal(9, 2), out vmin decimal(9, 2), vavg decimal(9, 2), vcount int)
begin
declare 
select min(e.sal) minSal, max(e.sal) maxSal, truncate(avg(e.sal), 2) average, count(*) No_of_emp into vmax, vmin, vavg, vcount
from emp2 e
where e.deptno = pdeptno;
end $$

mysql> call dispSalary(10);
+--------+---------+---------+---------+-----------+
| deptno | minSal  | maxSal  | average | No_of_emp |
+--------+---------+---------+---------+-----------+
|     10 | 1495.00 | 5750.00 | 2890.62 |         4 |
+--------+---------+---------+---------+-----------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

5. write a procedure to display all pid,pname,cid,cname and salesman name(use 
product,category and salesman table)

mysql> delimiter $$
mysql> create procedure dispSalesman()
    -> begin
    -> select p.pid, p.pname, c.cid, c.cname, s.sname
    -> from product p inner join category c on p.cid = c.cid inner join salesman s on p.sid = s.sid;
    -> end $$
Query OK, 0 rows affected (0.06 sec)

mysql> delimiter ;
mysql> call dispSalesman();
+-----+------------+-----+-------------+-------+
| pid | pname      | cid | cname       | sname |
+-----+------------+-----+-------------+-------+
| 111 | Pepsi      |   4 | cold drinks | rahul |
| 123 | lays       |   1 | chips       | Kirti |
| 124 | dairy nilk |   2 | chocolate   | Arnav |
| 134 | nachos     |   1 | chips       | Kirti |
+-----+------------+-----+-------------+-------+
4 rows in set (0.03 sec)

Query OK, 0 rows affected (0.03 sec)

6. write a procedure to display all vehicles bought by a customer. pass customer name as 
a parameter.(use vehicle,salesman,customer and relation table)
mysql> delimiter $$
mysql> create procedure dispCust(in pcname varchar(20))
    -> begin
    -> select cv.custid Customer_ID, c.cname Customer_Name, cv.vid Vehicle_ID, v.vname Vehicle_Name
    -> from custvehicle cv inner join customer c on cv.custid = c.custid inner join vehicle v on cv.vid = v.vid
    -> where c.cname = pcname;
    -> end $$
Query OK, 0 rows affected (0.11 sec)

mysql> call dispCust('Nilima');
+-------------+---------------+------------+--------------+
| Customer_ID | Customer_Name | Vehicle_ID | Vehicle_Name |
+-------------+---------------+------------+--------------+
|           1 | Nilima        |          1 | Activa       |
|           1 | Nilima        |          2 | Santro       |
+-------------+---------------+------------+--------------+
2 rows in set (0.00 sec)

7. Write a procedure that displays the following information of all emp
Empno,Name,job,Salary,Status,deptno
Note: - Status will be (Greater, Lesser or Equal) respective to average salary of their own
department. Display an error message Emp table is empty if there is no matching
record.

mysql> delimiter $$
mysql> create procedure dispEmp()
    -> begin
    -> declare v_stop int default 0;
    -> declare vempno int;
    -> declare vname varchar(20);
    -> declare vjob varchar(20);
    -> declare vsal decimal(9, 2);
    -> declare status varchar(20);
    -> declare vdeptno int;
    -> declare vavg decimal(9, 2);
    -> declare empcur cursor for select empno, ename, job, sal, deptno from emp2;
    -> declare continue handler for Not Found set v_stop=1;
    -> open empcur;
    -> label1: loop
    -> fetch empcur into vempno, vname, vjob, vsal, vdeptno;
    -> if v_stop=1 then
    -> leave label1;
    -> end if;
    ->
    -> select truncate(avg(sal), 2) into vavg
    -> from emp2 e
    -> where e.deptno = vdeptno;
    ->
    -> if vsal>vavg then
    -> set status = 'Greater';
    -> elseif vsal<vavg then
    -> set status = 'Lesser';
    -> else
    -> set status = 'Equal';
    -> end if;
    ->
    -> select vempno, vname, vjob, vsal, vdeptno, status;
    -> end loop;
    -> close empcur;
    -> end $$
Query OK, 0 rows affected (0.07 sec)

mysql> delimiter ;
mysql> call dispEmp();
+--------+-------+----------+--------+---------+--------+
| vempno | vname | vjob     | vsal   | vdeptno | status |
+--------+-------+----------+--------+---------+--------+
|   7369 | SMITH | Sr.Clerk | 800.00 |      20 | Lesser |
+--------+-------+----------+--------+---------+--------+
1 row in set (0.00 sec)

+--------+-------+----------+---------+---------+--------+
| vempno | vname | vjob     | vsal    | vdeptno | status |
+--------+-------+----------+---------+---------+--------+
|   7499 | ALLEN | SALESMAN | 1840.00 |      30 | Lesser |
+--------+-------+----------+---------+---------+--------+
1 row in set (0.00 sec)

+--------+-------+----------+---------+---------+--------+
| vempno | vname | vjob     | vsal    | vdeptno | status |
+--------+-------+----------+---------+---------+--------+
|   7521 | WARD  | SALESMAN | 1437.50 |      30 | Lesser |
+--------+-------+----------+---------+---------+--------+
1 row in set (0.01 sec)

+--------+-------+---------+---------+---------+---------+
| vempno | vname | vjob    | vsal    | vdeptno | status  |
+--------+-------+---------+---------+---------+---------+
|   7566 | JONES | MANAGER | 2975.00 |      20 | Greater |
+--------+-------+---------+---------+---------+---------+
1 row in set (0.01 sec)

+--------+--------+----------+---------+---------+--------+
| vempno | vname  | vjob     | vsal    | vdeptno | status |
+--------+--------+----------+---------+---------+--------+
|   7654 | MARTIN | SALESMAN | 1437.50 |      30 | Lesser |
+--------+--------+----------+---------+---------+--------+
1 row in set (0.01 sec)

+--------+-------+---------+---------+---------+--------+
| vempno | vname | vjob    | vsal    | vdeptno | status |
+--------+-------+---------+---------+---------+--------+
|   7698 | BLAKE | MANAGER | 2850.00 |      30 | Lesser |
+--------+-------+---------+---------+---------+--------+
1 row in set (0.01 sec)

+--------+-------+---------+---------+---------+--------+
| vempno | vname | vjob    | vsal    | vdeptno | status |
+--------+-------+---------+---------+---------+--------+
|   7782 | CLARK | Manager | 2817.50 |      10 | Lesser |
+--------+-------+---------+---------+---------+--------+
1 row in set (0.01 sec)

+--------+-------+---------+---------+---------+---------+
| vempno | vname | vjob    | vsal    | vdeptno | status  |
+--------+-------+---------+---------+---------+---------+
|   7788 | SCOTT | ANALYST | 3000.00 |      20 | Greater |
+--------+-------+---------+---------+---------+---------+
1 row in set (0.01 sec)

+--------+-------+---------+---------+---------+---------+
| vempno | vname | vjob    | vsal    | vdeptno | status  |
+--------+-------+---------+---------+---------+---------+
|   7839 | KING  | Manager | 5750.00 |      10 | Greater |
+--------+-------+---------+---------+---------+---------+
1 row in set (0.01 sec)

+--------+--------+----------+---------+---------+--------+
| vempno | vname  | vjob     | vsal    | vdeptno | status |
+--------+--------+----------+---------+---------+--------+
|   7844 | TURNER | SALESMAN | 1500.00 |      30 | Lesser |
+--------+--------+----------+---------+---------+--------+
1 row in set (0.01 sec)

+--------+-------+-------+---------+---------+--------+
| vempno | vname | vjob  | vsal    | vdeptno | status |
+--------+-------+-------+---------+---------+--------+
|   7876 | ADAMS | CLERK | 1100.00 |      20 | Lesser |
+--------+-------+-------+---------+---------+--------+
1 row in set (0.02 sec)

+--------+-------+-------+--------+---------+--------+
| vempno | vname | vjob  | vsal   | vdeptno | status |
+--------+-------+-------+--------+---------+--------+
|   7900 | JAMES | CLERK | 950.00 |      30 | Lesser |
+--------+-------+-------+--------+---------+--------+
1 row in set (0.02 sec)

+--------+-------+---------+---------+---------+---------+
| vempno | vname | vjob    | vsal    | vdeptno | status  |
+--------+-------+---------+---------+---------+---------+
|   7902 | FORD  | ANALYST | 3000.00 |      20 | Greater |
+--------+-------+---------+---------+---------+---------+
1 row in set (0.02 sec)

+--------+--------+---------+---------+---------+--------+
| vempno | vname  | vjob    | vsal    | vdeptno | status |
+--------+--------+---------+---------+---------+--------+
|   7934 | MILLER | Manager | 1495.00 |      10 | Lesser |
+--------+--------+---------+---------+---------+--------+
1 row in set (0.02 sec)

+--------+---------+----------+----------+---------+---------+
| vempno | vname   | vjob     | vsal     | vdeptno | status  |
+--------+---------+----------+----------+---------+---------+
|   7569 | Nishant | Investor | 10000.00 |      30 | Greater |
+--------+---------+----------+----------+---------+---------+
1 row in set (0.02 sec)

+--------+--------+---------+----------+---------+---------+
| vempno | vname  | vjob    | vsal     | vdeptno | status  |
+--------+--------+---------+----------+---------+---------+
|   7570 | Akshay | Partner | 10000.00 |      30 | Greater |
+--------+--------+---------+----------+---------+---------+
1 row in set (0.03 sec)

+--------+-------+---------+----------+---------+---------+
| vempno | vname | vjob    | vsal     | vdeptno | status  |
+--------+-------+---------+----------+---------+---------+
|   7571 | Lavee | Partner | 10000.00 |      30 | Greater |
+--------+-------+---------+----------+---------+---------+
1 row in set (0.03 sec)

+--------+----------+-------+---------+---------+--------+
| vempno | vname    | vjob  | vsal    | vdeptno | status |
+--------+----------+-------+---------+---------+--------+
|    101 | Abhishek | sales | 1500.00 |      10 | Lesser |
+--------+----------+-------+---------+---------+--------+
1 row in set (0.03 sec)

+--------+-------+-------+---------+---------+--------+
| vempno | vname | vjob  | vsal    | vdeptno | status |
+--------+-------+-------+---------+---------+--------+
|    102 | kadam | clerk | 1500.00 |      20 | Lesser |
+--------+-------+-------+---------+---------+--------+
1 row in set (0.03 sec)

Query OK, 0 rows affected (0.03 sec)

8. Write a procedure to update salary in emp table based on following rules.
Exp< =35 then no Update
Exp> 35 and <=38 then 20% of salary
Exp> 38 then 25% of salary

mysql> delimiter $$
mysql> create procedure updateSal()
    -> begin
    -> declare v_stop int default 0;
    -> declare vhrdt date;
    -> declare vexp int;
    -> declare vempno int;
    -> declare vsal decimal(9, 2);
    -> declare empcur cursor for select empno, sal, hiredate from emp2;
    -> declare continue handler for Not Found set v_stop=1;
    -> open empcur;
    -> label1: loop
    -> fetch empcur into vempno, vsal, vhrdt;
    -> if v_stop=1 then
    -> leave label1;
    -> end if;
    ->
    -> select floor(datediff(curdate(), vhrdt)/365) into vexp
    -> from emp2 e
    -> where e.empno = vempno;
    ->
    -> if vexp between 36 and 38 then
    -> set vsal  = 1.2*vsal;
    ->
    -> elseif vexp>38 then
    -> set vsal = vsal + (.2*vsal);
    ->
    -> end if;
    ->
    -> update emp2 e
    -> set e.sal = vsal
    -> where e.empno = vempno;
    ->
    -> select vempno, vsal, vhrdt;
    ->
    -> end loop;
    -> close empcur;
    -> end $$
Query OK, 0 rows affected (0.07 sec)

9. Write a procedure and a function.
Function: write a function to calculate number of years of experience of employee.(note: 
pass hiredate as a parameter)
Procedure: Capture the value returned by the above function to calculate the additional
allowance for the emp based on the experience.
Additional Allowance = Year of experience x 3000
Calculate the additional allowance 
and store Empno, ename,Date of Joining, and Experience in
years and additional allowance in Emp_Allowance table.
create table emp_allowance(
empno int,
ename varchar(20),
hiredate date,
experience int,
allowance decimal(9,2));

mysql> SET GLOBAL log_bin_trust_function_creators = 1;
    ->
    -> create function getExp(hrdt date)
    -> returns int
    ->
    -> begin
    -> declare exp int default 0;
    -> set exp = floor(datediff(curdate(), hrdt)/365);
    -> return exp;
    -> end $$
Query OK, 0 rows affected (0.01 sec)


mysql> delimiter $$
mysql> create procedure addAllow()
    -> begin
    -> declare v_stop int default 0;
    -> declare vexp int;
    -> declare vhrdt date;
    -> declare vempno int;
    -> declare vename varchar(20);
    -> declare vallow decimal(9, 2);
    -> declare empcur cursor for select empno, ename, hiredate from emp2;
    -> declare continue handler for Not Found set v_stop=1;
    -> open empcur;
    -> label1: loop
    -> fetch empcur into vempno, vename, vhrdt;
    -> if v_stop=1 then
    -> leave label1;
    -> end if;
    ->
    -> set vexp = getExp(vhrdt);
    -> set vallow = vexp*3000;
    ->
    -> insert into emp_allowance values
    -> (vempno, vename, vhrdt, vexp, vallow);
    ->
    -> select vempno, vhrdt, vallow;
    ->
    -> end loop;
    -> close empcur;
    -> end $$
Query OK, 0 rows affected (0.06 sec)

mysql> select *
    -> from emp_allowance;
+-------+----------+------------+------------+-----------+
| empno | ename    | hiredate   | experience | allowance |
+-------+----------+------------+------------+-----------+
|  7369 | SMITH    | 1980-12-17 |         41 | 123000.00 |
|  7499 | ALLEN    | 1981-02-20 |         41 | 123000.00 |
|  7521 | WARD     | 1981-02-22 |         41 | 123000.00 |
|  7566 | JONES    | 1981-04-02 |         41 | 123000.00 |
|  7654 | MARTIN   | 1981-09-28 |         41 | 123000.00 |
|  7698 | BLAKE    | 1981-05-01 |         41 | 123000.00 |
|  7782 | CLARK    | 1981-06-09 |         41 | 123000.00 |
|  7788 | SCOTT    | 1982-12-09 |         39 | 117000.00 |
|  7839 | KING     | 1981-11-17 |         40 | 120000.00 |
|  7844 | TURNER   | 1981-09-08 |         41 | 123000.00 |
|  7876 | ADAMS    | 1983-01-12 |         39 | 117000.00 |
|  7900 | JAMES    | 1981-12-03 |         40 | 120000.00 |
|  7902 | FORD     | 1981-12-03 |         40 | 120000.00 |
|  7934 | MILLER   | 1982-01-23 |         40 | 120000.00 |
|  7569 | Nishant  | 1981-09-02 |         41 | 123000.00 |
|  7570 | Akshay   | 1981-09-02 |         41 | 123000.00 |
|  7571 | Lavee    | 1985-04-15 |         37 | 111000.00 |
|   101 | Abhishek | 1995-02-02 |         27 |  81000.00 |
|   102 | kadam    | 1996-02-02 |         26 |  78000.00 |
+-------+----------+------------+------------+-----------+
19 rows in set (0.00 sec)


10. Write a function to compute the following. Function should take sal and hiredate 
as i/p and return the cost to company.
DA = 15% Salary, HRA= 20% of Salary, TA= 8% of Salary.
Special Allowance will be decided based on the service in the company.
< 1 Year Nil
>=1 Year< 2 Year 10% of Salary
>=2 Year< 4 Year 20% of Salary
>4 Year 30% of Salary

mysql> delimiter $$
mysql> create function getCtc(sal decimal(9, 2), hrdt date)
    -> returns decimal(9, 2)
    -> begin
    -> declare da decimal(9, 2);
    -> declare hra decimal(9, 2);
    -> declare ta decimal(9, 2);
    -> declare sa decimal(9, 2);
    -> declare ctc decimal(9, 2);
    -> declare exp int;
    ->
    -> set da = .15*sal;
    -> set hra = .2 * sal;
    -> set ta = .8 * sal;
    ->
    -> set exp = getExp(hrdt);
    ->
    -> if exp<1 then
    -> set sa = 0;
    -> elseif exp>=1 and exp<2 then
    -> set sa = .1*sal;
    -> elseif exp>=2 and exp<4 then
    -> set sa = .2*sal;
    -> elseif exp>4 then
    -> set sa = .3*sal;
    -> end if;
    ->
    -> set ctc = da+hra+ta+sa;
    ->
    -> return ctc;
    ->
    -> end $$
Query OK, 0 rows affected (0.06 sec)


11. Write query to display empno,ename,sal,cost to company for all employees(note: 
use function written in question 10)

mysql> select e.empno, e.ename, e.sal, getCtc(e.sal, e.hiredate) CTC
    -> from emp2 e;
+-------+----------+----------+----------+
| empno | ename    | sal      | CTC      |
+-------+----------+----------+----------+
|  7369 | SMITH    |  1152.00 |  1670.40 |
|  7499 | ALLEN    |  2208.00 |  3201.60 |
|  7521 | WARD     |  1725.00 |  2501.25 |
|  7566 | JONES    |  3570.00 |  5176.50 |
|  7654 | MARTIN   |  1725.00 |  2501.25 |
|  7698 | BLAKE    |  3420.00 |  4959.00 |
|  7782 | CLARK    |  3381.00 |  4902.45 |
|  7788 | SCOTT    |  3600.00 |  5220.00 |
|  7839 | KING     |  6900.00 | 10005.00 |
|  7844 | TURNER   |  1800.00 |  2610.00 |
|  7876 | ADAMS    |  1320.00 |  1914.00 |
|  7900 | JAMES    |  1140.00 |  1653.00 |
|  7902 | FORD     |  3600.00 |  5220.00 |
|  7934 | MILLER   |  1794.00 |  2601.30 |
|  7569 | Nishant  | 12000.00 | 17400.00 |
|  7570 | Akshay   | 12000.00 | 17400.00 |
|  7571 | Lavee    | 12000.00 | 17400.00 |
|   101 | Abhishek |  1500.00 |  2175.00 |
|   102 | kadam    |  1500.00 |  2175.00 |
+-------+----------+----------+----------+
19 rows in set (0.00 sec)

Q2. Write trigger
1. Write a tigger to store the old salary details in Emp _Back (Emp _Back has the 
same structure as emp table without any
constraint) table.
(note :create emp_back table before writing trigger)
----- to create emp_back table
create table emp_back(
empno int,
ename varchar(20),
oldsal decimal(9,2),
newsal decimal(9,2)
)
(note :
execute procedure written in Q8 and 
check the entries in EMP_back table after execution of the procedure)

mysql> delimiter $$
mysql> create trigger empBack before update on emp2
    -> for each row
    -> begin
    -> insert into emp_back values
    -> (old.empno, old.ename, old.sal, new.sal);
    -> end $$
Query OK, 0 rows affected (0.11 sec)

mysql> delimiter ;

mysql> select *
    -> from emp_back;
+-------+----------+----------+----------+
| empno | ename    | oldsal   | newsal   |
+-------+----------+----------+----------+
|  7369 | SMITH    |  1152.00 |  1382.40 |
|  7499 | ALLEN    |  2208.00 |  2649.60 |
|  7521 | WARD     |  1725.00 |  2070.00 |
|  7566 | JONES    |  3570.00 |  4284.00 |
|  7654 | MARTIN   |  1725.00 |  2070.00 |
|  7698 | BLAKE    |  3420.00 |  4104.00 |
|  7782 | CLARK    |  3381.00 |  4057.20 |
|  7788 | SCOTT    |  3600.00 |  4320.00 |
|  7839 | KING     |  6900.00 |  8280.00 |
|  7844 | TURNER   |  1800.00 |  2160.00 |
|  7876 | ADAMS    |  1320.00 |  1584.00 |
|  7900 | JAMES    |  1140.00 |  1368.00 |
|  7902 | FORD     |  3600.00 |  4320.00 |
|  7934 | MILLER   |  1794.00 |  2152.80 |
|  7569 | Nishant  | 12000.00 | 14400.00 |
|  7570 | Akshay   | 12000.00 | 14400.00 |
|  7571 | Lavee    | 12000.00 | 14400.00 |
|   101 | Abhishek |  1500.00 |  1500.00 |
|   102 | kadam    |  1500.00 |  1500.00 |
+-------+----------+----------+----------+
19 rows in set (0.00 sec)


2. Write a trigger which add entry in audit table when user tries to insert or delete 
records in employee table store empno,name,username and date on which 
operation performed and which action is done insert or delete. in emp_audit table.
create table before writing trigger.

create table empaudit(
 empno int,
 ename varchar(20),
 username varchar(20),
 chdate date,
 action varchar(20)
);



3. Create table vehicle_history. Write a trigger to store old vehicleprice and new vehicle 
price in history table before you update price in vehicle table
(note: use vehicle table).
create table vehicle_history(
vno int,
vname varchar(20),
oldprice decimal(9,2),
newprice decimal(9,2),
chdate date,
username varchar(20)


delimiter $$
create trigger vehUpdt before update on vehicle
for each row
begin
insert into vehicle_history values
(old.vid, old.vname, old.price, new.price, curdate(), suser_sname());
end $$

